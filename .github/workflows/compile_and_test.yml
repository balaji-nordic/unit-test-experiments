name: Compile and unit test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  get_vars:
    runs-on: ubuntu-latest
    outputs:
      docker_img_version: ${{ steps.get_vars.outputs.docker_image_version }}
    steps:
    - uses: actions/checkout@v3

    - name: Echo vars
      id: get_vars
      run: |
        cat .github/variables/docker_image_version >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: get_vars
    container: headerfile/bc-docker:${{needs.get_vars.outputs.docker_img_version}}

    steps:
    - name: Echo
      run: |
        echo ${{needs.get_vars.outputs.docker_img_version}}
    - uses: actions/checkout@v3

    - name: Init submodules
      run: |
        git submodule init
        git submodule update --init --recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest

    - name: Install deps
      run: sudo apt install -y lcov

    - name: Generate code coverage report
      run: |
        lcov --directory . --capture --rc lcov_branch_coverage=1 -q --output-file coverage.info --exclude '*unity.c'
        genhtml -q --rc genhtml_branch_coverage=1 --output-directory coverage coverage.info

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage/
